Anmol Gupta | notes.txt
—-------

Unpacking tarball and cloning the repository:
Get a link for randall-git.tgz and use wget <url> to download it to the local computer.
Unpack and clone using:
mkdir temp
tar -xvf randall-git.tgz -C temp
git clone temp randall
cd randall  # this is the cloned repo
Splitting the randall implementation:
I navigated through the randall.c source code and copied functions relating to hardware, software and outputs into the required .c files and an additional check_CPU.c file.
I got rid of the prefix “static” for functions that are called in main or in other files since we require their external linking.
In the .h files, I called each function and prefixed functions called in main or other files with the word “extern”.
I included #ifndef, #define, #endif in my .h files to make sure a header file gets included only once by the compiler.
In the .c files, I called the required .h files such as output.h in output.c using the #include prefix. I also included other <library>.h files if they were required by the program.
Right now, we do not have anything to put in options.c and options.h. The main function remains in randall.c and all the header files for the newly splitted files are called in it.

Changes in makefile 
src = $(wildcard *.c)
obj = $(src:.c=.o)
 
default: randall
randall: $(obj)
   $(CC) -o $@ $^ $(CFLAGS)

> Made Commits
—--------
Making -i and -o options:
1. Used getopt to get the required options and set nbytes for each case as well as the number of chars to output at a time in the second -o case. 

Writing randomize functions:
1. Checked if number of arguments was correct and gave errors / exited if there were any wrong options inputted.
2. For each input option and output mode, I outputted the correct random chars through the required techniques. 
* I also had to modify the initializers to take char * (essentially string) argument so I 
could initialize with a file.
3. Called required functions in main.

Makefile:
- edited the makefile to take all files and tar it on running the required make command.

Sanity check tests:

bash-5.2$ time dd if=/dev/urandom ibs=8192 obs=8192 count=16384 >/dev/null
16384+0 records in
16384+0 records out
134217728 bytes (134 MB, 128 MiB) copied, 0.917342 s, 146 MB/s

real    0m0.937s
user    0m0.020s
sys     0m0.902s

bash-5.2$ time ./randall 133562368 >/dev/null
real    0m3.953s
user    0m3.915s
sys     0m0.019s

bash-5.2$ time ./randall 133562368 | cat >/dev/null
real    0m4.262s
user    0m4.133s
sys     0m0.266s

bash-5.2$ time ./randall 133562368 >rand.data
real    0m4.167s
user    0m3.934s
sys     0m0.183s




